-- Group: taxReturn
-- Name: detail
-- Notes: 
-- Copyright (c) 1999-2019 by OpenMFG LLC, d/b/a xTuple.
-- See www.xtuple.com/EULA for the full text of the software license.
SELECT taxauth, 
       taxauth AS group,
       description,
       CASE WHEN reverse  THEN 3
            WHEN sales    THEN 1
            WHEN purchase THEN 2
        END AS sortorder,
       CASE WHEN reverse                 THEN <? value('reversecharges') ?>
            WHEN sales AND NOT exempt    THEN <? value('sales_taxable') ?>
            WHEN sales AND exempt        THEN <? value('sales_nontaxable') ?>
            WHEN purchase AND NOT exempt THEN <? value('purchases_taxable') ?>
            WHEN purchase AND exempt     THEN <? value('purchases_nontaxable') ?>
        END AS source,
       COALESCE(SUM(CASE WHEN sales THEN extended END), 0.0) AS salesbase,
       formatMoney(COALESCE(SUM(CASE WHEN sales THEN extended END), 0.0)) AS f_salesbase,
       COALESCE(SUM(CASE WHEN sales THEN taxbase END), 0.0) AS salestaxbase,
       formatMoney(COALESCE(SUM(CASE WHEN sales THEN taxbase END), 0.0)) AS f_salestaxbase,
       COALESCE(SUM(CASE WHEN reverse THEN extended END), 0.0) AS reversechargebase,
       formatMoney(COALESCE(SUM(CASE WHEN reverse THEN extended END), 0.0)) AS f_reversechargebase,
       COALESCE(SUM(CASE WHEN reverse THEN taxbase END), 0.0) AS reversechargetaxbase,
       formatMoney(COALESCE(SUM(CASE WHEN reverse THEN taxbase END), 0.0))
       AS f_reversechargetaxbase,
       COALESCE(SUM(CASE WHEN purchase THEN extended END), 0.0) AS purchasebase,
       formatMoney(COALESCE(SUM(CASE WHEN purchase THEN extended END), 0.0)) AS f_purchasebase,
       COALESCE(SUM(CASE WHEN purchase THEN taxbase END), 0.0) AS purchasetaxbase,
       formatMoney(COALESCE(SUM(CASE WHEN purchase THEN taxbase END), 0.0)) AS f_purchasetaxbase,
       COALESCE(SUM(CASE WHEN sales THEN taxbase END), 0.0) -
       COALESCE(SUM(CASE WHEN purchase THEN taxbase END), 0.0) AS nettaxbase,
       formatMoney(COALESCE(SUM(CASE WHEN sales THEN taxbase END), 0.0) -
                   COALESCE(SUM(CASE WHEN purchase THEN taxbase END), 0.0))
       AS f_nettaxbase,
       'curr' AS salesbase_xtnumericrole,
       'curr' AS salestaxbase_xtnumericrole,
       'curr' AS reversechargebase_xtnumericrole,
       'curr' AS reversechargetaxbase_xtnumericrole,
       'curr' AS purchasebase_xtnumericrole,
       'curr' AS purchasetax_xtnumericrole,
       'curr' AS nettaxbase_xtnumericrole,
       0 AS salesbase_xttotalrole,
       0 AS salestaxbase_xttotalrole,
       0 AS reversechargebase_xttotalrole,
       0 AS reversechargetaxbase_xttotalrole,
       0 AS purchasebase_xttotalrole,
       0 AS purchasetaxbase_xttotalrole,
       0 AS nettaxbase_xttotalrole
  FROM (
        SELECT taxhead_doc_type IN ('INV', 'CM', 'AR', 'CR') AS sales,
               taxhead_doc_type IN ('VCH', 'EX', 'AP', 'CK') AS purchase,
               SUM(COALESCE(taxdetail_tax_paid, taxdetail_tax)) < 0 AS reverse,
               SUM(COALESCE(taxdetail_tax_paid, taxdetail_tax)) = 0 AS exempt,
               taxauth_code AS taxauth, taxauth_name AS description,
               taxline_extended / taxhead_curr_rate * docSense(taxhead_doc_type, taxhead_doc_id)
               AS extended,
               SUM(COALESCE(taxdetail_tax_paid, taxdetail_tax) / taxhead_curr_rate) *
               docSense(taxhead_doc_type, taxhead_doc_id) AS taxbase
          FROM taxhead
          JOIN taxline ON taxhead_id = taxline_taxhead_id
          JOIN taxdetail ON taxline_id = taxdetail_taxline_id
          LEFT OUTER JOIN tax ON taxdetail_tax_id = tax_id
          LEFT OUTER JOIN taxauth ON tax_taxauth_id = taxauth_id
         WHERE taxhead_status = 'P'
           AND taxauth_id = <? value("taxauth_id") ?>
        <? if exists("distDate") ?>
           AND taxhead_distdate BETWEEN <? value("startDate") ?>
                                    AND <? value("endDate") ?>
        <? else ?>
           AND taxhead_date BETWEEN <? value("startDate") ?>
                                AND <? value("endDate") ?>
        <? endif ?>
        <? if exists("cashbasedtax") ?>
           AND taxdetail_paydate IS NOT NULL
        <? endif ?>
         GROUP BY taxhead_doc_type, taxhead_doc_id, taxhead_curr_rate, taxline_id, taxline_extended,
                  taxauth_code, taxauth_name
        ) data
 GROUP BY taxauth, description, sortorder, source
 ORDER BY sortorder, source;
