-- Group: tasklist
-- Name:  detail
-- Notes: 
--        Copyright (c) 1999-2019 by OpenMFG LLC, d/b/a xTuple.
--        See www.xtuple.com/EULA for the full text of the software license.

WITH tasklist AS (
/*        ---------ALL Tasks-------------- */
<? if reExists("(tasks|projects)")?>
  SELECT task_id AS id, 
         CASE WHEN task_parent_type = 'J' THEN 3 ELSE 1 END AS altId, 
         CASE WHEN task_parent_type = 'J' THEN <? value("prjtask") ?> ELSE <? value("task") ?> END AS type, 
         task_number AS number,
         task_name AS name,
         task_prj_id as prj_id,
         COALESCE(pr1.prj_number,pr2.prj_number) as prj_number,
         CASE WHEN (task_status != 'C') THEN TRUE
              ELSE FALSE
         END AS active,
         CASE WHEN (task_status='C') THEN <? value("complete") ?>
              WHEN (task_status='D') THEN <? value("deferred") ?>
              WHEN (task_status='P') THEN <? value("pending") ?>
              WHEN (task_status='O') THEN <? value("inprocess") ?>
              WHEN (task_status='N') THEN <? value("new") ?>
              ELSE task_status
         END AS stage,
         incdtpriority_name AS priority, 
         task_owner_username AS owner, 
         (SELECT array_to_string(array_agg(taskass_username),',') AS assigned FROM taskass WHERE taskass_task_id=task_id) AS assigned,
         firstLine(task_descrip) AS notes, 
         task_start_date as start, 
         task_due_date AS due, 
         COALESCE(prospect_crmacct_id, crmacct_id) AS crmacct_id,
         crmacct_number, 
         crmacct_name, 
         task_parent_type AS parent,
         CASE task_parent_type 
              WHEN 'OPP' THEN
               <? value("opportunity") ?> || '-' || ophead_number
              WHEN 'INCDT' THEN
               <? value("incident") ?> || '-' || incdt_number
              WHEN 'CRMA' THEN
               <? value("account") ?> || '-' || crmacct_number
              WHEN 'PSPCT' THEN
               <? value("prospect") ?> || '-' || prospect_number
              WHEN 'J' THEN
               <? value("project") ?> || '-' || COALESCE(pr1.prj_number,pr2.prj_number)  
              ELSE task_parent_type
         END AS parent_qtdisplayrole,
         CASE task_parent_type 
              WHEN 'OPP' THEN
               <? value("opportunity") ?> || '-' || ophead_number
              WHEN 'INCDT' THEN
               <? value("incident") ?> || '-' || incdt_number
              WHEN 'CRMA' THEN
               <? value("account") ?> || '-' || crmacct_number
              WHEN 'PSPCT' THEN
               <? value("prospect") ?> || '-' || prospect_number
              WHEN 'J' THEN
               <? value("project") ?> || '-' || COALESCE(pr1.prj_number,pr2.prj_number)
              ELSE task_parent_type
         END AS f_parent,
         task_parent_id AS parent_xtidrole,
         COALESCE(cust_id,-1) > 0 AS cust_qtdisplayrole,
         cust_id AS cust,
         CASE WHEN (task_status <> 'C' AND task_due_date < CURRENT_DATE) THEN 'expired'
              WHEN (task_status <> 'C' AND task_due_date > CURRENT_DATE) THEN 'future'
         END AS due_qtforegroundrole 
  <? if exists("hasContext") ?>
    FROM task xx
  <? else ?>
    FROM task() yy
  <? endif ?>
      LEFT OUTER JOIN incdt ON (incdt_id=task_parent_id AND task_parent_type='INCDT') 
      LEFT OUTER JOIN ophead ON (ophead_id=task_parent_id AND task_parent_type='OPP')
      LEFT OUTER JOIN crmacct ON (crmacct_id=task_parent_id AND task_parent_type='CRMA')
      LEFT OUTER JOIN custinfo ON (cust_crmacct_id=crmacct_id)
      LEFT OUTER JOIN prospect ON (prospect_id=task_parent_id AND task_parent_type='PSPCT')
      LEFT OUTER JOIN incdtpriority ON (incdtpriority_id=task_priority_id)
      LEFT OUTER JOIN prj pr1 ON (pr1.prj_id=task_parent_id AND task_parent_type = 'J')
      LEFT OUTER JOIN prj pr2 ON (pr2.prj_id=task_prj_id)
   WHERE NOT task_istemplate
  <? if exists("incdt_id") ?>
    AND (incdt_id =<? value("incdt_id") ?>)
  <? endif ?>
  <? if exists("ophead_id") ?>
    AND (ophead_id =<? value("ophead_id") ?>)
  <? endif ?>
    AND (<? if exists("tasks") ?>task_parent_type <> 'J' 
         <? else ?> false <? endif ?>
       <? if exists("projects")?>
        OR task_parent_type = 'J'
       <? endif ?>)
  <? if exists("parent") ?>
    OR (task_parent_type = 'J'
        AND task_parent_id=<? value("prj_id") ?>
        AND task_status='O')
  <? endif ?>
<? endif ?>

/*        ---------PROJECT-------------- */
<? if exists("projects")?>
UNION ALL
    SELECT prj_id AS id, 
           4 AS altId, 
           <? value("project") ?> AS type,
           prj_number AS number,
           prj_name AS name, 
           prj_id, 
           prj_number,
           prj_status != 'C' AS active,
           CASE WHEN (prj_status='P') THEN <? value("concept") ?>
                WHEN (prj_status='O') THEN <? value("inprocess") ?>
                WHEN (prj_status='C') THEN <? value("complete") ?>
                ELSE '?'
           END AS stage,
           incdtpriority_name AS priority, 
           prj_owner_username AS owner, 
           prj_username AS assigned,
           firstLine(prj_descrip) AS notes, 
           prj_start_date AS start, 
           prj_due_date AS due, 
           crmacct_id,
           crmacct_number, 
           crmacct_name,
           prj_number AS parent,
           '' AS parent_qtdisplayrole,
           prj_number AS f_parent,
           NULL AS parent_xtidrole,
           false AS cust_qtdisplayrole, 
           null AS cust,
           CASE WHEN (prj_status != 'C'AND prj_due_date < CURRENT_DATE) THEN 'expired'
                WHEN (prj_status != 'C'AND prj_due_date > CURRENT_DATE) THEN 'future'
           END AS due_qtforegroundrole 
  <? if exists("hasContext") ?>
       FROM prj
  <? else ?>
       FROM prj()
  <? endif ?>
      LEFT OUTER JOIN crmacct ON crmacct_id=prj_crmacct_id
      LEFT OUTER JOIN incdtpriority ON (incdtpriority_id=prj_priority_id)
      WHERE true
  <? if exists("prj_id")?>
    AND prj_id = <? value("prj_id") ?>
  <? endif ?>
  <? if exists("incdt_id") ?>
    AND prj_id = (SELECT incdt_prj_id FROM incdt WHERE incdt_id =<? value("incdt_id") ?>)
  <? endif ?>
  <? if exists("ophead_id") ?>
    AND prj_id = (SELECT ophead_prj_id FROM ophead WHERE ophead_id =<? value("ophead_id") ?>)
  <? endif ?>
<? endif ?>

/*        ---------INCIDENT-------------- */
<? if exists("incidents")?>
<? if reExists("(tasks|projects)")?>
UNION ALL
<? endif ?>
  SELECT incdt_id AS id, 
         2 AS altId, 
         <? value("incident") ?> AS type, 
         CAST(incdt_number AS text) AS number,
         incdt_summary AS name, 
         incdt_prj_id,
         prj_number,
         incdt_status != 'L' AS active,
         CASE WHEN (incdt_status='N') THEN <? value("new") ?>
              WHEN (incdt_status='F') THEN <? value("feedback") ?>
              WHEN (incdt_status='C') THEN <? value("confirmed") ?>
              WHEN (incdt_status='A') THEN <? value("assigned") ?>
              WHEN (incdt_status='R') THEN <? value("resolved") ?>
              WHEN (incdt_status='L') THEN <? value("closed") ?>
              ELSE '?'
         END AS stage,
         incdtpriority_name AS priority,
         incdt_owner_username AS owner, 
         incdt_assigned_username AS assigned,
         firstLine(incdt_descrip) AS notes, 
         incdt_timestamp::DATE AS start, 
         null::DATE AS due, 
         crmacct_id,
         crmacct_number, 
         crmacct_name,
         <? value("incident") ?> || '-' || incdt_number AS parent,
         '' AS parent_qtdisplay_role,
         <? value("incident") ?> || '-' || incdt_number AS f_parent,
         NULL AS parent_xtidrole,
         COALESCE(cust_id,-1) > 0 AS cust_qtdisplayrole,
         COALESCE(cust_id,-1) AS cust,
         NULL AS due_qtforegroundrole 
  <? if exists("hasContext") ?>
         FROM incdt
  <? else ?>
         FROM incdt()
  <? endif ?>
           LEFT OUTER JOIN crmacct ON (crmacct_id=incdt_crmacct_id) 
           LEFT OUTER JOIN custinfo ON (cust_crmacct_id=crmacct_id)
           LEFT OUTER JOIN incdtpriority ON (incdtpriority_id=incdt_incdtpriority_id) 
           LEFT OUTER JOIN prj ON (prj_id=incdt_prj_id)
    WHERE true
   <? if exists("incdt_id") ?>
    AND incdt_id =<? value("incdt_id") ?>
  <? endif ?>
  <? if exists("ophead_id") ?>
    AND false
  <? endif ?>
<? endif ?>

/*        ---------OPPORTUNITY-------------- */
<? if exists("opportunities")?>
<? if reExists("(tasks|incidents|projects)")?>
UNION ALL
<? endif ?>
  SELECT ophead_id AS id, 
         5 AS altId, 
         <? value("opportunity") ?> AS type, 
         ophead_number AS number,
         ophead_name AS name, 
         ophead_prj_id,
         prj_number,
         ophead_active AS active,
         opstage_descrip AS stage,         
         incdtpriority_name AS priority, 
         ophead_owner_username AS owner, 
         ophead_username AS assigned,
         firstLine(ophead_notes) AS notes, 
         ophead_start_date AS start, 
         ophead_target_date AS due, 
         crmacct_id,
         crmacct_number, 
         crmacct_name, 
          <? value("opportunity") ?> || '-' || ophead_number AS parent,
         '' AS parent_qtdisplayrole,
          <? value("opportunity") ?> || '-' || ophead_number AS f_parent,
         NULL AS parent_xtidrole,
         COALESCE(cust_id,-1) > 0 AS cust_qtdisplayrole,
         cust_id AS cust,
         CASE WHEN (ophead_active AND ophead_target_date < CURRENT_DATE) THEN 'expired'
              WHEN (ophead_active AND ophead_target_date > CURRENT_DATE) THEN 'future'
         END AS due_qtforegroundrole 
  <? if exists("hasContext") ?>
    FROM ophead
  <? else ?>
    FROM ophead()
  <? endif ?>
      JOIN opstage ON (ophead_opstage_id=opstage_id)
      LEFT OUTER JOIN crmacct ON (crmacct_id=ophead_crmacct_id)
      LEFT OUTER JOIN custinfo ON (cust_crmacct_id=crmacct_id)
      LEFT OUTER JOIN incdtpriority ON (incdtpriority_id=ophead_priority_id) 
      LEFT OUTER JOIN prj ON (prj_id=ophead_prj_id)
    WHERE true
  <? if exists("ophead_id") ?>
    AND ophead_id =<? value("ophead_id") ?>
  <? endif ?>
  <? if exists("incdt_id") ?>
    AND false
  <? endif ?>
<? endif ?>
)
SELECT *,
  formatDate(due) AS f_due, 
  "start" IS NOT NULL AS hasStartDate,
  due IS NOT NULL AS hasDueDate
FROM tasklist
WHERE true
 <? if exists("crmacct_id") ?>
   AND (crmacct_id =<? value("crmacct_id") ?>)
 <? endif ?>
 <? if exists("crmacctgrp") ?>
   AND crmacct_id IN (SELECT groupsitem_reference_id FROM crmacctgrpitem WHERE groupsitem_groups_id=<? value("crmacctgrp") ?>)
 <? endif ?>
 <? if exists("prospect_id") ?>
    AND (parent='PSPCT' AND parent_xtidrole = <? value("prospect_id") ?>)
 <? endif ?>
 <? if exists("prj_id") ?>
    AND CASE WHEN <? value("prj_id") ?> = -1 THEN true ELSE prj_id = <? value("prj_id") ?> END
 <? endif ?>
 <? if exists("startStartDate") ?>
    AND ("start" <= <? value("startStartDate") ?>)
  <? endif ?>
  <? if exists("startEndDate") ?>
    AND ("start" >= <? value("startEndDate") ?>)
  <? endif ?>
  <? if exists("dueStartDate") ?>
    AND (due <= <? value("dueStartDate") ?>)
  <? endif ?>
  <? if exists("dueEndDate") ?>
    AND (due >= <? value("dueEndDate") ?>)
  <? endif ?>
 <? if exists("completedonly") ?>
    AND (NOT active)			
  <? elseif not exists("completed") ?>
    AND (active)			
  <? endif ?>
  <? if exists("username") ?>
    AND ("owner" = <? value("username") ?>
         OR assigned ~ <? value("username") ?>)
  <? endif ?>
  <? if exists("assigned_username") ?> 
    AND assigned ~ <? value("assigned_username") ?>
  <? endif ?>
  <? if exists("assigned_usr_pattern") ?>
    AND assigned ~ <? value("assigned_usr_pattern") ?>
  <? endif ?>
  <? if exists("owner_username") ?> 
    AND ("owner"=<? value("owner_username") ?>) 
  <? elseif exists("owner_usr_pattern") ?>
    AND ("owner" ~ <? value("owner_usr_pattern") ?>) 
  <? endif ?>
ORDER BY hasDueDate desc, due, hasStartDate desc, start
